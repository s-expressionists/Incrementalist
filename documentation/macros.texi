@c ===================================================================
@c Abbreviations
@c ===================================================================

@macro sysname
Incrementalist
@end macro
@macro toppackage
incrementalist
@end macro

@macro commonlisp
Common Lisp
@end macro

@macro emacs
Emacs
@end macro

@macro eclector
Eclector
@end macro
@macro eclectorlink
@url{https://github.com/s-expressionists/eclector,@eclector{}}
@end macro

@macro climacs
Climacs
@end macro

@macro cluffer
Cluffer
@end macro
@macro clufferlink
@url{https://github.com/robert-strandh/Cluffer,@cluffer{}}
@end macro

@macro cst
Concrete Syntax Tree
@end macro
@macro cstlink
@url{https://github.com/s-expressionists/Concrete-Syntax-Tree,@cst{}}
@end macro

@c ===================================================================
@c Lambda list keywords
@c ===================================================================

@macro optional
@t{&optional}
@end macro
@macro rest
@t{&rest}
@end macro
@macro pkey
@t{&key}
@end macro
@macro pbody
@t{&body}
@end macro

@c ===================================================================
@c Semantic markup and references
@c ===================================================================

@macro setf{NAME}
(setf \NAME\)
@end macro

@iftex
@macro symbol{NAME,PACKAGE}
\NAME\ @smallertt [\PACKAGE\]
@end macro
@end iftex
@ifnottex
@macro symbol{NAME,PACKAGE}
\NAME\ [\PACKAGE\]
@end macro
@end ifnottex

@macro defvara{NAME,PACKAGE}
@anchor{Variable \PACKAGE\|\NAME\}
@defvar {@symbol{\NAME\,\PACKAGE\}}
@end macro

@macro deffuna{NAME,PACKAGE}
@anchor{Function \PACKAGE\|\NAME\}
@deffn {Function} {@symbol{\NAME\,\PACKAGE\}}
@end macro

@macro defgena{NAME,PACKAGE}
@anchor{Generic-Function \PACKAGE\|\NAME\}
@deffn {Generic Function} {@symbol{\NAME\,\PACKAGE\}}
@end macro
@macro genref{NAME,PACKAGE}
@link{Generic-Function \PACKAGE\|\NAME\,\PACKAGE\:\NAME\}
@end macro

@macro defmaca{NAME,PACKAGE}
@anchor{Macro \PACKAGE\|\NAME\}
@deffn {Macro} {@symbol{\NAME\,\PACKAGE\}}
@end macro

@macro defclassa{NAME,PACKAGE}
@anchor{Class \PACKAGE\|\NAME\}
@deftp {Class} {@symbol{\NAME\,\PACKAGE\}}
@end macro
@macro classref{NAME,PACKAGE}
@link{Class \PACKAGE\|\NAME\,\PACKAGE\:\NAME\}
@end macro
